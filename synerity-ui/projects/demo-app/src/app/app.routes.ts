import { Routes } from '@angular/router';

export const routes: Routes = [
  { path: '', redirectTo: '/home', pathMatch: 'full' },
  { path: 'home', loadComponent: () => import('./pages/home/home').then(m => m.Home) },
  { path: 'components/button', loadComponent: () => import('./pages/button/button').then(m => m.Button) },
  { path: 'components/card', loadComponent: () => import('./pages/card/card').then(m => m.Card) },
  { path: 'components/inputtext', loadComponent: () => import('./pages/inputtext/inputtext').then(m => m.Inputtext) },
  { path: 'components/checkbox', loadComponent: () => import('./pages/checkbox/checkbox').then(m => m.Checkbox) },
  { path: 'components/select', loadComponent: () => import('./pages/select/select').then(m => m.Select) },
  { path: 'components/textarea', loadComponent: () => import('./pages/textarea/textarea').then(m => m.TextareaPage) },
  { path: 'components/radiobutton', loadComponent: () => import('./pages/radiobutton/radiobutton').then(m => m.RadioButtonPage) },
  { path: 'components/password', loadComponent: () => import('./pages/password/password').then(m => m.PasswordPage) },
  { path: 'components/inputnumber', loadComponent: () => import('./pages/inputnumber/inputnumber').then(m => m.InputNumberPage) },
  { path: 'components/datepicker', loadComponent: () => import('./pages/datepicker/datepicker').then(m => m.DatePickerPage) },
  { path: 'components/colorpicker', loadComponent: () => import('./pages/colorpicker/colorpicker').then(m => m.ColorPickerPage) },
  { path: 'components/slider', loadComponent: () => import('./pages/slider/slider').then(m => m.SliderPage) },
  { path: 'components/rating', loadComponent: () => import('./pages/rating/rating').then(m => m.RatingPage) },
  { path: 'components/toggleswitch', loadComponent: () => import('./pages/toggleswitch/toggleswitch').then(m => m.ToggleSwitchPage) },
  { path: 'components/multiselect', loadComponent: () => import('./pages/multiselect/multiselect').then(m => m.MultiSelectPage) },
  { path: 'components/autocomplete', loadComponent: () => import('./pages/autocomplete/autocomplete').then(m => m.AutoCompletePage) },
  { path: 'components/editor', loadComponent: () => import('./pages/editor/editor').then(m => m.EditorPage) },
  { path: 'components/cascadeselect', loadComponent: () => import('./pages/cascadeselect/cascadeselect').then(m => m.CascadeSelectPage) },
  { path: 'components/floatlabel', loadComponent: () => import('./pages/floatlabel/floatlabel').then(m => m.FloatLabelPage) },
  { path: 'components/inputmask', loadComponent: () => import('./pages/inputmask/inputmask').then(m => m.InputMaskPage) },
  { path: 'components/listbox', loadComponent: () => import('./pages/listbox/listbox').then(m => m.ListBoxPage) },
  { path: 'components/selectbutton', loadComponent: () => import('./pages/selectbutton/selectbutton').then(m => m.SelectButtonPage) },
  { path: 'components/togglebutton', loadComponent: () => import('./pages/togglebutton/togglebutton').then(m => m.ToggleButtonPage) },
  { path: 'components/iconfield', loadComponent: () => import('./pages/iconfield/iconfield').then(m => m.IconFieldPage) },
  { path: 'components/inputgroup', loadComponent: () => import('./pages/inputgroup/inputgroup').then(m => m.InputGroupPage) },
  { path: 'components/keyfilter', loadComponent: () => import('./pages/keyfilter/keyfilter').then(m => m.KeyFilterPage) },
  { path: 'components/table', loadComponent: () => import('./pages/table/table').then(m => m.Table) },
  { path: 'components/dataview', loadComponent: () => import('./pages/dataview/dataview').then(m => m.Dataview) },
  { path: 'components/orderlist', loadComponent: () => import('./pages/orderlist/orderlist').then(m => m.Orderlist) },
  { path: 'components/paginator', loadComponent: () => import('./pages/paginator/paginator').then(m => m.PaginatorPage) },
  { path: 'components/picklist', loadComponent: () => import('./pages/picklist/picklist').then(m => m.Picklist) },
  { path: 'components/timeline', loadComponent: () => import('./pages/timeline/timeline').then(m => m.TimelinePage) },
  { path: 'components/tree', loadComponent: () => import('./pages/tree/tree').then(m => m.TreePage) },
  { path: 'components/treetable', loadComponent: () => import('./pages/treetable/treetable').then(m => m.TreetablePage) },
  { path: 'components/virtualscroller', loadComponent: () => import('./pages/virtualscroller/virtualscroller').then(m => m.VirtualscrollerPage) },
  { path: 'components/accordion', loadComponent: () => import('./pages/accordion/accordion').then(m => m.Accordion) },
  { path: 'components/divider', loadComponent: () => import('./pages/divider/divider').then(m => m.DividerPage) },
  { path: 'components/fieldset', loadComponent: () => import('./pages/fieldset/fieldset').then(m => m.FieldsetPage) },
  { path: 'components/panel', loadComponent: () => import('./pages/panel/panel').then(m => m.PanelPage) },
  { path: 'components/scrollpanel', loadComponent: () => import('./pages/scrollpanel/scrollpanel').then(m => m.ScrollPanelPage) },
  { path: 'components/splitter', loadComponent: () => import('./pages/splitter/splitter').then(m => m.SplitterPage) },
  { path: 'components/stepper', loadComponent: () => import('./pages/stepper/stepper').then(m => m.StepperPage) },
  { path: 'components/tabs', loadComponent: () => import('./pages/tabs/tabs').then(m => m.TabsPage) },
  { path: 'components/toolbar', loadComponent: () => import('./pages/toolbar/toolbar').then(m => m.ToolbarPage) },
  { path: 'components/confirmdialog', loadComponent: () => import('./pages/confirmdialog/confirmdialog').then(m => m.ConfirmDialogPage) },
  { path: 'components/confirmpopup', loadComponent: () => import('./pages/confirmpopup/confirmpopup').then(m => m.ConfirmPopupPage) },
  { path: 'components/dialog', loadComponent: () => import('./pages/dialog/dialog').then(m => m.DialogPage) },
  { path: 'components/drawer', loadComponent: () => import('./pages/drawer/drawer').then(m => m.DrawerPage) },
  { path: 'components/dynamicdialog', loadComponent: () => import('./pages/dynamicdialog/dynamicdialog').then(m => m.DynamicDialogPage) },
  { path: 'components/popover', loadComponent: () => import('./pages/popover/popover').then(m => m.PopoverPage) },
  { path: 'components/tooltip', loadComponent: () => import('./pages/tooltip/tooltip').then(m => m.TooltipPage) },
  { path: 'components/upload', loadComponent: () => import('./pages/upload/upload').then(m => m.Upload) },
  { path: 'components/menu', loadComponent: () => import('./pages/menu/menu').then(m => m.Menu) },
  { path: 'components/breadcrumb', loadComponent: () => import('./pages/breadcrumb/breadcrumb').then(m => m.Breadcrumb) },
  { path: 'components/chart', loadComponent: () => import('./pages/chart/chart').then(m => m.Chart) },
  { path: 'components/message', loadComponent: () => import('./pages/message/message').then(m => m.Message) },
  { path: 'components/toast', loadComponent: () => import('./pages/toast/toast').then(m => m.Toast) },
  { path: 'components/avatar', loadComponent: () => import('./pages/avatar/avatar').then(m => m.Avatar) },
  { path: 'components/badge', loadComponent: () => import('./pages/badge/badge').then(m => m.Badge) },
  { path: 'components/progressbar', loadComponent: () => import('./pages/progressbar/progressbar').then(m => m.ProgressBarPage) },
  { path: 'components/chip', loadComponent: () => import('./pages/chip/chip').then(m => m.ChipPage) },
  { path: 'components/knob', loadComponent: () => import('./pages/knob/knob').then(m => m.KnobPage) },
  { path: 'components/treeselect', loadComponent: () => import('./pages/treeselect/treeselect').then(m => m.TreeSelectPage) },
  { path: 'components/inputotp', loadComponent: () => import('./pages/inputotp/inputotp').then(m => m.InputOtpPage) },
  { path: 'components/iftalabel', loadComponent: () => import('./pages/iftalabel/iftalabel').then(m => m.IftaLabelPage) },
  { path: 'components/iftlabel', loadComponent: () => import('./pages/iftlabel/iftlabel').then(m => m.IftLabelPage) },
  { path: 'components/speeddial', loadComponent: () => import('./pages/speeddial/speeddial').then(m => m.SpeedDialPage) },
  { path: 'components/splitbutton', loadComponent: () => import('./pages/splitbutton/splitbutton').then(m => m.SplitButtonPage) },
  { path: 'components/contextmenu', loadComponent: () => import('./pages/contextmenu/contextmenu').then(m => m.ContextMenuPage) },
  { path: 'components/dock', loadComponent: () => import('./pages/dock/dock').then(m => m.DockPage) },
  { path: 'components/megamenu', loadComponent: () => import('./pages/megamenu/megamenu').then(m => m.MegaMenuPage) },
  { path: 'components/menubar', loadComponent: () => import('./pages/menubar/menubar').then(m => m.MenubarPage) },
  { path: 'components/panelmenu', loadComponent: () => import('./pages/panelmenu/panelmenu').then(m => m.PanelMenuPage) },
  { path: 'components/tieredmenu', loadComponent: () => import('./pages/tieredmenu/tieredmenu').then(m => m.TieredMenuPage) },
  { path: 'components/carousel', loadComponent: () => import('./pages/carousel/carousel').then(m => m.CarouselPage) },
  { path: 'components/galleria', loadComponent: () => import('./pages/galleria/galleria').then(m => m.GalleriaPage) },
  { path: 'components/image', loadComponent: () => import('./pages/image/image').then(m => m.ImagePage) },
  { path: 'components/imagecompare', loadComponent: () => import('./pages/imagecompare/imagecompare').then(m => m.ImageComparePage) },
  { path: 'components/animateonscroll', loadComponent: () => import('./pages/animateonscroll/animateonscroll').then(m => m.AnimateOnScrollPage) },
  { path: 'components/autofocus', loadComponent: () => import('./pages/autofocus/autofocus').then(m => m.AutoFocusPage) },
  { path: 'components/blockui', loadComponent: () => import('./pages/blockui/blockui').then(m => m.BlockUiPage) },
  { path: 'components/focustrap', loadComponent: () => import('./pages/focustrap/focustrap').then(m => m.FocusTrapPage) },
  { path: 'components/fluid', loadComponent: () => import('./pages/fluid/fluid').then(m => m.FluidPage) },
  { path: 'components/inplace', loadComponent: () => import('./pages/inplace/inplace').then(m => m.InplacePage) },
  { path: 'components/metergroup', loadComponent: () => import('./pages/metergroup/metergroup').then(m => m.Metergroup) },
  { path: 'components/progressspinner', loadComponent: () => import('./pages/progressspinner/progressspinner').then(m => m.Progressspinner) },
  { path: 'components/ripple', loadComponent: () => import('./pages/ripple/ripple').then(m => m.RipplePage) },
  { path: 'components/scrolltop', loadComponent: () => import('./pages/scrolltop/scrolltop').then(m => m.Scrolltop) },
  { path: 'components/skeleton', loadComponent: () => import('./pages/skeleton/skeleton').then(m => m.SkeletonPage) },
  { path: 'components/styleclass', loadComponent: () => import('./pages/styleclass/styleclass').then(m => m.Styleclass) },
  { path: 'components/tag', loadComponent: () => import('./pages/tag/tag').then(m => m.TagPage) },
  { path: 'components/terminal', loadComponent: () => import('./pages/terminal/terminal').then(m => m.TerminalPage) },
  { path: 'components/orgchart', loadComponent: () => import('./pages/orgchart/orgchart').then(m => m.OrgChartPage) },
  { path: '**', redirectTo: '/home' }
];
